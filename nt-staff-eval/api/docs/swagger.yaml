definitions:
  structs.AdditionalInform:
    properties:
      doingStatus:
        type: string
      interested:
        type: string
      notInterested:
        type: string
    type: object
  structs.BranchStruct:
    properties:
      Id:
        type: integer
      city:
        type: string
      createdAt:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  structs.ByIdReq:
    properties:
      id:
        type: string
    type: object
  structs.Category:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  structs.CreateBranch:
    properties:
      city:
        type: string
      name:
        type: string
    type: object
  structs.CreateNewsReq:
    properties:
      authorId:
        type: string
      body:
        type: string
      categoryId:
        type: string
      cover:
        type: string
      readTime:
        type: string
      title:
        type: string
    type: object
  structs.CreateRated:
    properties:
      additional:
        type: string
      evaluations:
        items:
          $ref: '#/definitions/structs.ByIdReq'
        type: array
      id:
        type: string
      isStaff:
        type: boolean
      userId:
        type: string
    type: object
  structs.CreateRatedReq:
    properties:
      additional:
        type: string
      evaluations:
        items:
          $ref: '#/definitions/structs.ByIdReq'
        type: array
      isStaff:
        type: boolean
      userId:
        type: string
    type: object
  structs.CreateRoleStruct:
    properties:
      name:
        type: string
      sectionId:
        type: integer
    type: object
  structs.CreateSectionStruct:
    properties:
      cover:
        type: string
      name:
        type: string
      specId:
        type: integer
    type: object
  structs.CreateSuggestReq:
    properties:
      content:
        type: string
      userId:
        type: string
    type: object
  structs.CreateUser:
    properties:
      branchId:
        type: integer
      email:
        type: string
      firstName:
        type: string
      gender:
        type: string
      id:
        type: string
      lastName:
        type: string
      password:
        type: string
      roleId:
        type: string
      specId:
        type: string
    type: object
  structs.CreateUserReq:
    properties:
      branchId:
        type: integer
      email:
        type: string
      firstName:
        type: string
      gender:
        type: string
      lastName:
        type: string
      password:
        type: string
      roleId:
        type: string
      specId:
        type: string
    type: object
  structs.Data:
    properties:
      data:
        type: string
      message:
        type: string
    type: object
  structs.Error:
    properties:
      message:
        type: string
    type: object
  structs.EvaluationStruct:
    properties:
      content:
        type: string
      createdAt:
        type: string
      id:
        type: string
      section:
        $ref: '#/definitions/structs.SectionStruct'
      star:
        type: integer
      type:
        type: string
      updatedAt:
        type: string
    type: object
  structs.LoginUser:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  structs.News:
    properties:
      author:
        $ref: '#/definitions/structs.UserStruct'
      body:
        type: string
      category:
        $ref: '#/definitions/structs.Category'
      cover:
        type: string
      createdAt:
        type: string
      id:
        type: string
      readTime:
        type: string
      title:
        type: string
      updatedAt:
        type: string
    type: object
  structs.Rated:
    properties:
      additional:
        type: string
      createdAt:
        type: string
      evaluations:
        items:
          $ref: '#/definitions/structs.EvaluationStruct'
        type: array
      id:
        type: string
      isStaff:
        type: boolean
      user:
        $ref: '#/definitions/structs.UserStruct'
    type: object
  structs.RoleStruct:
    properties:
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      section:
        $ref: '#/definitions/structs.SectionStruct'
      updatedAt:
        type: string
    type: object
  structs.SectionStruct:
    properties:
      cover:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      name:
        type: string
      specId:
        type: integer
      updatedAt:
        type: string
    type: object
  structs.SocialMedia:
    properties:
      facebook:
        type: string
      instagram:
        type: string
      lindenIn:
        type: string
      telegram:
        type: string
      youTube:
        type: string
    type: object
  structs.StandardErrorModel:
    properties:
      error:
        $ref: '#/definitions/structs.Error'
    type: object
  structs.Suggest:
    properties:
      content:
        type: string
      createdAt:
        type: string
      id:
        type: string
      status:
        type: string
      updatedAt:
        type: string
      user:
        $ref: '#/definitions/structs.UserStruct'
    type: object
  structs.UpdateBranch:
    properties:
      city:
        type: string
      name:
        type: string
    type: object
  structs.UpdateEvaluation:
    properties:
      content:
        type: string
      id:
        type: string
      sectionId:
        type: integer
      star:
        type: integer
      type:
        type: string
    type: object
  structs.UpdateEvaluationReq:
    properties:
      content:
        type: string
      sectionId:
        type: integer
      star:
        type: integer
      type:
        type: string
    type: object
  structs.UpdateStatusSuggest:
    properties:
      status:
        type: string
    type: object
  structs.UpdateUserFromUser:
    properties:
      address:
        type: string
      birthday:
        type: string
      firstName:
        type: string
      gender:
        type: string
      id:
        type: string
      lastName:
        type: string
      phone:
        type: string
      socialMedias:
        $ref: '#/definitions/structs.SocialMedia'
    type: object
  structs.UserListResp:
    properties:
      cover:
        type: string
      firstName:
        type: string
      id:
        type: string
      lastName:
        type: string
      role:
        $ref: '#/definitions/structs.RoleStruct'
      scoreInfo:
        $ref: '#/definitions/structs.UserScoreInfo'
      socialMedias:
        $ref: '#/definitions/structs.SocialMedia'
      specId:
        type: string
      userPlaceInTop:
        type: integer
    type: object
  structs.UserLoginResp:
    properties:
      email:
        type: string
      firstName:
        type: string
      id:
        type: string
      lastName:
        type: string
      specId:
        type: string
    type: object
  structs.UserScoreInfo:
    properties:
      clientAverage:
        type: number
      numberOfClientRated:
        type: integer
      numberOfStaffRated:
        type: integer
      staffAverage:
        type: number
    type: object
  structs.UserStruct:
    properties:
      addedAt:
        type: string
      additionalInform:
        $ref: '#/definitions/structs.AdditionalInform'
      address:
        type: string
      birthday:
        type: string
      branch:
        $ref: '#/definitions/structs.BranchStruct'
      cover:
        type: string
      createdAt:
        type: string
      email:
        type: string
      firstName:
        type: string
      gender:
        type: string
      id:
        type: string
      lastName:
        type: string
      phone:
        type: string
      role:
        $ref: '#/definitions/structs.RoleStruct'
      scoreInfo:
        $ref: '#/definitions/structs.UserScoreInfo'
      socialMedias:
        $ref: '#/definitions/structs.SocialMedia'
      specId:
        type: string
      updatedAt:
        type: string
      userPlaceInTop:
        type: integer
      workTime:
        type: string
    type: object
info:
  contact: {}
paths:
  /v1/branches:
    get:
      consumes:
      - application/json
      description: This API for getting list of branches
      parameters:
      - description: Page
        in: query
        name: page
        type: string
      - description: Limit
        in: query
        name: limit
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/structs.BranchStruct'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: ListBranches
      tags:
      - branch
  /v1/branches/:
    post:
      consumes:
      - application/json
      description: This API for creating a new branch
      parameters:
      - description: BranchCreateRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/structs.CreateBranch'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.BranchStruct'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: CreateBranch
      tags:
      - branch
  /v1/branches/{id}:
    delete:
      consumes:
      - application/json
      description: This API for deleting the branch
      parameters:
      - description: BranchId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: DeleteBranch
      tags:
      - branch
    get:
      consumes:
      - application/json
      description: This API for getting branch detail
      parameters:
      - description: BranchId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.BranchStruct'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: GetBranch
      tags:
      - branch
    put:
      consumes:
      - application/json
      description: This API for updating branch
      parameters:
      - description: BranchId
        in: path
        name: id
        required: true
        type: string
      - description: BranchUpdateRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/structs.UpdateBranch'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.BranchStruct'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: UpdateBranch
      tags:
      - branch
  /v1/categories:
    get:
      consumes:
      - application/json
      description: Get all news category
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/structs.Category'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: Get all news category
      tags:
      - category news
    post:
      consumes:
      - application/json
      description: Create news category
      parameters:
      - description: newsCategoryCreateRequest
        in: body
        name: news_category
        required: true
        schema:
          $ref: '#/definitions/structs.Category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: Create news category
      tags:
      - category news
  /v1/categories/{id}:
    delete:
      consumes:
      - application/json
      description: Delete news category
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: Delete news category
      tags:
      - category news
  /v1/evaluations:
    get:
      consumes:
      - application/json
      description: This API for getting list of evaluations
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/structs.EvaluationStruct'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: ListEvaluations
      tags:
      - evaluation
  /v1/evaluations/:
    post:
      consumes:
      - application/json
      description: This API for creating a new evaluation
      parameters:
      - description: evaluationCreateRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/structs.UpdateEvaluationReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.UpdateEvaluation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: CreateEvaluation
      tags:
      - evaluation
  /v1/evaluations/{id}:
    delete:
      consumes:
      - application/json
      description: This API for deleting the evaluation
      parameters:
      - description: EvaluationId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: DeleteEvaluation
      tags:
      - evaluation
    get:
      consumes:
      - application/json
      description: This API for getting evaluation detail
      parameters:
      - description: EvaluationId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.EvaluationStruct'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: GetEvaluation
      tags:
      - evaluation
    put:
      consumes:
      - application/json
      description: This API for updating evaluation
      parameters:
      - description: EvaluationId
        in: path
        name: id
        required: true
        type: string
      - description: EvaluationUpdateRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/structs.UpdateEvaluationReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.EvaluationStruct'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: UpdateEvaluation
      tags:
      - evaluation
  /v1/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: login data
        in: body
        name: loginData
        required: true
        schema:
          $ref: '#/definitions/structs.LoginUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.UserLoginResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      summary: LoginUser
      tags:
      - login
  /v1/news:
    get:
      consumes:
      - application/json
      description: Get all news
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      - description: title
        in: query
        name: title
        type: string
      - description: category_id
        in: query
        name: category_id
        type: string
      - description: author_id
        in: query
        name: author_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.News'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: Get all news
      tags:
      - news
    post:
      consumes:
      - application/json
      description: Create news
      parameters:
      - description: newsCreateRequest
        in: body
        name: news
        required: true
        schema:
          $ref: '#/definitions/structs.CreateNewsReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.News'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: Create news
      tags:
      - news
  /v1/news/{id}:
    delete:
      consumes:
      - application/json
      description: Delete news
      parameters:
      - description: newsId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.News'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: Delete news
      tags:
      - news
    get:
      consumes:
      - application/json
      description: Get news
      parameters:
      - description: newsId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.News'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: Get news
      tags:
      - news
    put:
      consumes:
      - application/json
      description: Update news
      parameters:
      - description: newsId
        in: path
        name: id
        required: true
        type: string
      - description: news
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/structs.CreateNewsReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.Data'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: Update news
      tags:
      - news
  /v1/rateds:
    get:
      consumes:
      - application/json
      description: This API for getting list of rateds
      parameters:
      - description: Page
        in: query
        name: page
        type: string
      - description: Limit
        in: query
        name: limit
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/structs.Rated'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: ListRateds
      tags:
      - rated
  /v1/rateds/:
    post:
      consumes:
      - application/json
      description: This API for creating a new rated
      parameters:
      - description: ratedCreateRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/structs.CreateRatedReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.CreateRated'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      summary: CreateRated
      tags:
      - rated
  /v1/rateds/{id}:
    delete:
      consumes:
      - application/json
      description: This API for deleting the rated
      parameters:
      - description: RatedID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: DeleteRated
      tags:
      - rated
  /v1/roles:
    get:
      consumes:
      - application/json
      description: This API for getting list of roles
      parameters:
      - description: Page
        in: query
        name: page
        type: string
      - description: Limit
        in: query
        name: limit
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/structs.RoleStruct'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: ListRoles
      tags:
      - role
  /v1/roles/:
    post:
      consumes:
      - application/json
      description: This API for creating a new role
      parameters:
      - description: roleCreateRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/structs.CreateRoleStruct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.RoleStruct'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: CreateRole
      tags:
      - role
  /v1/roles/{id}:
    delete:
      consumes:
      - application/json
      description: This API for deleting the role
      parameters:
      - description: RoleId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: DeleteRole
      tags:
      - role
    get:
      consumes:
      - application/json
      description: This API for getting role detail
      parameters:
      - description: RoleId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.RoleStruct'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: GetRole
      tags:
      - role
    put:
      consumes:
      - application/json
      description: This API for updating role
      parameters:
      - description: RoleId
        in: path
        name: id
        required: true
        type: string
      - description: RoleUpdateRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/structs.CreateRoleStruct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.RoleStruct'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: UpdateRole
      tags:
      - role
  /v1/sections:
    get:
      consumes:
      - application/json
      description: This API for getting list of sections
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/structs.SectionStruct'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: ListSections
      tags:
      - section
  /v1/sections/:
    post:
      consumes:
      - application/json
      description: This API for creating a new section
      parameters:
      - description: sectionCreateRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/structs.CreateSectionStruct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.SectionStruct'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: CreateSection
      tags:
      - section
  /v1/sections/{id}:
    delete:
      consumes:
      - application/json
      description: This API for deleting the section
      parameters:
      - description: SectionId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: DeleteSection
      tags:
      - section
    get:
      consumes:
      - application/json
      description: This API for getting section detail
      parameters:
      - description: SectionId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.SectionStruct'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: GetSection
      tags:
      - section
    put:
      consumes:
      - application/json
      description: This API for updating section
      parameters:
      - description: SectionId
        in: path
        name: id
        required: true
        type: string
      - description: SectionUpdateRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/structs.CreateSectionStruct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.SectionStruct'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: UpdateSection
      tags:
      - section
  /v1/suggests/:
    get:
      consumes:
      - application/json
      description: Get suggests
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: 'status type: new, active, inactive'
        in: query
        name: status
        type: string
      - description: User Id
        in: query
        name: user_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/structs.Suggest'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: Get suggests
      tags:
      - suggest
    post:
      consumes:
      - application/json
      description: Create suggest
      parameters:
      - description: suggestCreateRequest
        in: body
        name: suggest
        required: true
        schema:
          $ref: '#/definitions/structs.CreateSuggestReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.Suggest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: Create suggest
      tags:
      - suggest
  /v1/suggests/{id}:
    delete:
      consumes:
      - application/json
      description: This API for deleting suggest
      parameters:
      - description: SuggestId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: DeleteSuggest
      tags:
      - suggest
    get:
      consumes:
      - application/json
      description: Get suggest
      parameters:
      - description: suggestId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.Suggest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: Get suggest
      tags:
      - suggest
    put:
      consumes:
      - application/json
      description: This API for updating suggest status
      parameters:
      - description: suggestId
        in: path
        name: id
        required: true
        type: string
      - description: SectionUpdateRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/structs.UpdateStatusSuggest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.Suggest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: UpdateSuggestStatus
      tags:
      - suggest
  /v1/top_users:
    get:
      consumes:
      - application/json
      description: This API for getting list of top users
      parameters:
      - description: Page
        in: query
        name: page
        type: string
      - description: Limit
        in: query
        name: limit
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/structs.UserStruct'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: ListTopUsers
      tags:
      - user
  /v1/users:
    get:
      consumes:
      - application/json
      description: This API for getting list of users
      parameters:
      - description: Section
        in: query
        name: section
        type: string
      - description: SearchId
        in: query
        name: searchId
        type: string
      - description: BranchId
        in: query
        name: branchId
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Place of Top
        in: query
        name: placeTop
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/structs.UserListResp'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: ListUsers
      tags:
      - user
  /v1/users/:
    post:
      consumes:
      - application/json
      description: This API for creating a new user
      parameters:
      - description: userCreateRequestt
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/structs.CreateUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.CreateUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: CreateUser
      tags:
      - user
  /v1/users/{id}:
    get:
      consumes:
      - application/json
      description: This API for getting user detail
      parameters:
      - description: UserId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.UserStruct'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: GetUser
      tags:
      - user
    put:
      consumes:
      - application/json
      description: This API for updating user
      parameters:
      - description: UserId
        in: path
        name: id
        required: true
        type: string
      - description: UserUpdateRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/structs.UpdateUserFromUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/structs.UserStruct'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/structs.StandardErrorModel'
      security:
      - BearerAuth: []
      summary: UpdateUser
      tags:
      - user
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
